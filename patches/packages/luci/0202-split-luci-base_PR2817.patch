From 47b14b662412deb55fd089b9677ef8c75bef047c Mon Sep 17 00:00:00 2001
From: template <nomail@local>
Date: Fri, 6 Sep 2019 08:29:50 +0000
Subject: [PATCH] split-luci-base_PR2817

---
 .../luasrc/model/cbi/upnp/upnp.lua            |  2 +-
 .../luci-app-wol/luasrc/model/cbi/wol.lua     |  3 ++-
 libs/luci-lib-base/Makefile                   | 14 ++++++++++
 .../luci-lib-base}/luasrc/debug.lua           |  0
 .../luci-lib-base}/luasrc/http.lua            |  0
 .../luci-lib-base}/luasrc/http.luadoc         |  0
 .../luci-lib-base}/luasrc/ltn12.lua           |  0
 .../luci-lib-base}/luasrc/util.lua            | 10 -------
 .../luci-lib-base}/luasrc/util.luadoc         | 18 -------------
 libs/luci-lib-httpclient/Makefile             |  2 +-
 libs/luci-lib-httpprotoutils/Makefile         |  2 +-
 modules/luci-base/Makefile                    |  2 +-
 modules/luci-base/luasrc/dispatcher.lua       | 11 ++++----
 modules/luci-base/luasrc/xml.lua              | 26 +++++++++++++++++++
 modules/luci-base/luasrc/xml.luadoc           | 23 ++++++++++++++++
 .../model/cbi/admin_system/backupfiles.lua    |  2 +-
 16 files changed, 76 insertions(+), 39 deletions(-)
 create mode 100644 libs/luci-lib-base/Makefile
 rename {modules/luci-base => libs/luci-lib-base}/luasrc/debug.lua (100%)
 rename {modules/luci-base => libs/luci-lib-base}/luasrc/http.lua (100%)
 rename {modules/luci-base => libs/luci-lib-base}/luasrc/http.luadoc (100%)
 rename {modules/luci-base => libs/luci-lib-base}/luasrc/ltn12.lua (100%)
 rename {modules/luci-base => libs/luci-lib-base}/luasrc/util.lua (98%)
 rename {modules/luci-base => libs/luci-lib-base}/luasrc/util.luadoc (96%)
 create mode 100644 modules/luci-base/luasrc/xml.lua
 create mode 100644 modules/luci-base/luasrc/xml.luadoc

diff --git a/applications/luci-app-upnp/luasrc/model/cbi/upnp/upnp.lua b/applications/luci-app-upnp/luasrc/model/cbi/upnp/upnp.lua
index a2023926e..fa823a7a7 100644
--- a/applications/luci-app-upnp/luasrc/model/cbi/upnp/upnp.lua
+++ b/applications/luci-app-upnp/luasrc/model/cbi/upnp/upnp.lua
@@ -2,7 +2,7 @@
 -- Copyright 2008-2011 Jo-Philipp Wich <jow@openwrt.org>
 -- Licensed to the public under the Apache License 2.0.
 
-m = Map("upnpd", luci.util.pcdata(translate("Universal Plug & Play")),
+m = Map("upnpd", luci.xml.pcdata(translate("Universal Plug & Play")),
 	translate("UPnP allows clients in the local network to automatically configure the router."))
 
 m:section(SimpleSection).template  = "upnp_status"
diff --git a/applications/luci-app-wol/luasrc/model/cbi/wol.lua b/applications/luci-app-wol/luasrc/model/cbi/wol.lua
index 43b87dda9..f64713693 100644
--- a/applications/luci-app-wol/luasrc/model/cbi/wol.lua
+++ b/applications/luci-app-wol/luasrc/model/cbi/wol.lua
@@ -2,6 +2,7 @@
 -- Licensed to the public under the Apache License 2.0.
 
 local utl = require "luci.util"
+local xml = require "luci.xml"
 local sys = require "luci.sys"
 local ipc = require "luci.ip"
 local fs  = require "nixio.fs"
@@ -79,7 +80,7 @@ function host.write(self, s, val)
 		end
 
 		local msg = "<p><strong>%s</strong><br /><br /><code>%s<br /><br />" %{
-			translate("Starting WoL utility:"), utl.pcdata(cmd)
+			translate("Starting WoL utility:"), xml.pcdata(cmd)
 		}
 
 		local p = io.popen(cmd .. " 2>&1")
diff --git a/libs/luci-lib-base/Makefile b/libs/luci-lib-base/Makefile
new file mode 100644
index 000000000..35b1836ec
--- /dev/null
+++ b/libs/luci-lib-base/Makefile
@@ -0,0 +1,14 @@
+#
+# Copyright (C) 2008-2014 The LuCI Team <luci@lists.subsignal.org>
+#
+# This is free software, licensed under the Apache License, Version 2.0 .
+#
+
+include $(TOPDIR)/rules.mk
+
+LUCI_TITLE:=basic libraries for luci
+LUCI_DEPENDS:=+lua +luci-lib-nixio +luci-lib-ip +luci-lib-jsonc +liblucihttp-lua
+
+include ../../luci.mk
+
+# call BuildPackage - OpenWrt buildroot signature
diff --git a/modules/luci-base/luasrc/debug.lua b/libs/luci-lib-base/luasrc/debug.lua
similarity index 100%
rename from modules/luci-base/luasrc/debug.lua
rename to libs/luci-lib-base/luasrc/debug.lua
diff --git a/modules/luci-base/luasrc/http.lua b/libs/luci-lib-base/luasrc/http.lua
similarity index 100%
rename from modules/luci-base/luasrc/http.lua
rename to libs/luci-lib-base/luasrc/http.lua
diff --git a/modules/luci-base/luasrc/http.luadoc b/libs/luci-lib-base/luasrc/http.luadoc
similarity index 100%
rename from modules/luci-base/luasrc/http.luadoc
rename to libs/luci-lib-base/luasrc/http.luadoc
diff --git a/modules/luci-base/luasrc/ltn12.lua b/libs/luci-lib-base/luasrc/ltn12.lua
similarity index 100%
rename from modules/luci-base/luasrc/ltn12.lua
rename to libs/luci-lib-base/luasrc/ltn12.lua
diff --git a/modules/luci-base/luasrc/util.lua b/libs/luci-lib-base/luasrc/util.lua
similarity index 98%
rename from modules/luci-base/luasrc/util.lua
rename to libs/luci-lib-base/luasrc/util.lua
index a30e8b72f..f3aa52603 100644
--- a/modules/luci-base/luasrc/util.lua
+++ b/libs/luci-lib-base/luasrc/util.lua
@@ -159,10 +159,6 @@ end
 -- String and data manipulation routines
 --
 
-function pcdata(value)
-	return value and tparser.pcdata(tostring(value))
-end
-
 function urlencode(value)
 	if value ~= nil then
 		local str = tostring(value)
@@ -182,10 +178,6 @@ function urldecode(value, decode_plus)
 	return nil
 end
 
-function striptags(value)
-	return value and tparser.striptags(tostring(value))
-end
-
 function shellquote(value)
 	return string.format("'%s'", string.gsub(value or "", "'", "'\\''"))
 end
@@ -343,8 +335,6 @@ function parse_units(ustr)
 end
 
 -- also register functions above in the central string class for convenience
-string.pcdata      = pcdata
-string.striptags   = striptags
 string.split       = split
 string.trim        = trim
 string.cmatch      = cmatch
diff --git a/modules/luci-base/luasrc/util.luadoc b/libs/luci-lib-base/luasrc/util.luadoc
similarity index 96%
rename from modules/luci-base/luasrc/util.luadoc
rename to libs/luci-lib-base/luasrc/util.luadoc
index 4ec68dd1e..6ab130008 100644
--- a/modules/luci-base/luasrc/util.luadoc
+++ b/libs/luci-lib-base/luasrc/util.luadoc
@@ -67,15 +67,6 @@ Recursively dumps a table to stdout, useful for testing and debugging.
 @return				Always nil
 ]]
 
----[[
-Create valid XML PCDATA from given string.
-
-@class				function
-@name				pcdata
-@param value		String value containing the data to escape
-@return				String value containing the escaped data
-]]
-
 ---[[
 Decode an URL-encoded string - optionally decoding the "+" sign to space.
 
@@ -97,15 +88,6 @@ URL-encode given string.
 @see				urldecode
 ]]
 
----[[
-Strip HTML tags from given string.
-
-@class				function
-@name				striptags
-@param value		String containing the HTML text
-@return				String with HTML tags stripped of
-]]
-
 ---[[
 Safely quote value for use in shell commands.
 
diff --git a/libs/luci-lib-httpclient/Makefile b/libs/luci-lib-httpclient/Makefile
index b8bd428b2..9c28c35d8 100644
--- a/libs/luci-lib-httpclient/Makefile
+++ b/libs/luci-lib-httpclient/Makefile
@@ -7,7 +7,7 @@
 include $(TOPDIR)/rules.mk
 
 LUCI_TITLE:=HTTP(S) client library
-LUCI_DEPENDS:=+luci-base +luci-lib-nixio +luci-lib-httpprotoutils
+LUCI_DEPENDS:=+luci-lib-base +luci-lib-nixio +luci-lib-httpprotoutils
 
 include ../../luci.mk
 
diff --git a/libs/luci-lib-httpprotoutils/Makefile b/libs/luci-lib-httpprotoutils/Makefile
index 851a362eb..95f45d200 100644
--- a/libs/luci-lib-httpprotoutils/Makefile
+++ b/libs/luci-lib-httpprotoutils/Makefile
@@ -7,7 +7,7 @@
 include $(TOPDIR)/rules.mk
 
 LUCI_TITLE:=HTTP protocol utility functions
-LUCI_DEPENDS:=+luci-base
+LUCI_DEPENDS:=+luci-lib-base
 
 include ../../luci.mk
 
diff --git a/modules/luci-base/Makefile b/modules/luci-base/Makefile
index ea2330910..fde712a50 100644
--- a/modules/luci-base/Makefile
+++ b/modules/luci-base/Makefile
@@ -12,7 +12,7 @@ LUCI_TYPE:=mod
 LUCI_BASENAME:=base
 
 LUCI_TITLE:=LuCI core libraries
-LUCI_DEPENDS:=+lua +luci-lib-nixio +luci-lib-ip +rpcd +libubus-lua +luci-lib-jsonc +liblucihttp-lua +rpcd-mod-file +rpcd-mod-luci +cgi-io
+LUCI_DEPENDS:=+lua +luci-lib-nixio +luci-lib-ip +rpcd +libubus-lua +luci-lib-jsonc +liblucihttp-lua +luci-lib-base +rpcd-mod-file +rpcd-mod-luci +cgi-io
 
 
 PKG_SOURCE:=v1.0.0.tar.gz
diff --git a/modules/luci-base/luasrc/dispatcher.lua b/modules/luci-base/luasrc/dispatcher.lua
index d14a86673..050e656b5 100644
--- a/modules/luci-base/luasrc/dispatcher.lua
+++ b/modules/luci-base/luasrc/dispatcher.lua
@@ -5,6 +5,7 @@
 local fs = require "nixio.fs"
 local sys = require "luci.sys"
 local util = require "luci.util"
+local xml = require "luci.xml"
 local http = require "luci.http"
 local nixio = require "nixio", require "nixio.util"
 
@@ -271,12 +272,12 @@ end
 
 local function tree_to_json(node, json)
 	local fs = require "nixio.fs"
-	local util = require "luci.util"
+	local xml = require "luci.xml"
 
 	if type(node.nodes) == "table" then
 		for subname, subnode in pairs(node.nodes) do
 			local spec = {
-				title = util.striptags(subnode.title),
+				title = xml.striptags(subnode.title),
 				order = subnode.order
 			}
 
@@ -741,7 +742,7 @@ local function init_template_engine(ctx)
 				(scope and type(scope[key]) ~= "function" and scope[key]) or "")
 
 			if noescape ~= true then
-				val = util.pcdata(val)
+				val = xml.pcdata(val)
 			end
 
 			return string.format(' %s="%s"', tostring(key), val)
@@ -756,8 +757,8 @@ local function init_template_engine(ctx)
 		translate   = i18n.translate;
 		translatef  = i18n.translatef;
 		export      = function(k, v) if tpl.context.viewns[k] == nil then tpl.context.viewns[k] = v end end;
-		striptags   = util.striptags;
-		pcdata      = util.pcdata;
+		striptags   = xml.striptags;
+		pcdata      = xml.pcdata;
 		media       = media;
 		theme       = fs.basename(media);
 		resource    = luci.config.main.resourcebase;
diff --git a/modules/luci-base/luasrc/xml.lua b/modules/luci-base/luasrc/xml.lua
new file mode 100644
index 000000000..30b37210b
--- /dev/null
+++ b/modules/luci-base/luasrc/xml.lua
@@ -0,0 +1,26 @@
+-- Copyright 2008 Steven Barth <steven@midlink.org>
+-- Licensed to the public under the Apache License 2.0.
+
+local tparser = require "luci.template.parser"
+local string = require "string"
+
+local tostring = tostring
+
+module "luci.xml"
+
+--
+-- String and data manipulation routines
+--
+
+function pcdata(value)
+	return value and tparser.pcdata(tostring(value))
+end
+
+function striptags(value)
+	return value and tparser.striptags(tostring(value))
+end
+
+
+-- also register functions above in the central string class for convenience
+string.pcdata      = pcdata
+string.striptags   = striptags
diff --git a/modules/luci-base/luasrc/xml.luadoc b/modules/luci-base/luasrc/xml.luadoc
new file mode 100644
index 000000000..58de53396
--- /dev/null
+++ b/modules/luci-base/luasrc/xml.luadoc
@@ -0,0 +1,23 @@
+---[[
+LuCI utility functions.
+]]
+module "luci.xml"
+
+---[[
+Create valid XML PCDATA from given string.
+
+@class				function
+@name				pcdata
+@param value		String value containing the data to escape
+@return				String value containing the escaped data
+]]
+
+---[[
+Strip HTML tags from given string.
+
+@class				function
+@name				striptags
+@param value		String containing the HTML text
+@return				String with HTML tags stripped of
+]]
+
diff --git a/modules/luci-mod-system/luasrc/model/cbi/admin_system/backupfiles.lua b/modules/luci-mod-system/luasrc/model/cbi/admin_system/backupfiles.lua
index c81466c87..91c654916 100644
--- a/modules/luci-mod-system/luasrc/model/cbi/admin_system/backupfiles.lua
+++ b/modules/luci-mod-system/luasrc/model/cbi/admin_system/backupfiles.lua
@@ -68,7 +68,7 @@ else
 					break
 				else
 					files[#files+1] = "<li>"
-					files[#files+1] = luci.util.pcdata(ln)
+					files[#files+1] = luci.xml.pcdata(ln)
 					files[#files+1] = "</li>"
 				end
 			end
-- 
2.20.1

