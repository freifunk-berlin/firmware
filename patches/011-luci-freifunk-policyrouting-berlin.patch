Index: openwrt/feeds/luci/contrib/package/freifunk-policyrouting/files/etc/config/freifunk-policyrouting
===================================================================
--- openwrt.orig/feeds/luci/contrib/package/freifunk-policyrouting/files/etc/config/freifunk-policyrouting
+++ openwrt/feeds/luci/contrib/package/freifunk-policyrouting/files/etc/config/freifunk-policyrouting
@@ -1,7 +1,6 @@
-
 config 'settings' 'pr'
 	option 'enable' '0'
 	option 'strict' '1'
-        option 'fallback' '1'
-	option 'zones' ''
+	option 'fallback' '1'
+	option 'zones' 'freifunk'
 
Index: openwrt/feeds/luci/contrib/package/freifunk-policyrouting/files/etc/hotplug.d/iface/30-policyrouting
===================================================================
--- openwrt.orig/feeds/luci/contrib/package/freifunk-policyrouting/files/etc/hotplug.d/iface/30-policyrouting
+++ openwrt/feeds/luci/contrib/package/freifunk-policyrouting/files/etc/hotplug.d/iface/30-policyrouting
@@ -4,7 +4,7 @@
 . /lib/functions/network.sh
 
 proto="4"
-[ -f /proc/net/ipv6_route ] && proto="4 6"
+#[ -f /proc/net/ipv6_route ] && proto="4 6"
 
 config_load freifunk-policyrouting
 config_get enable pr enable
@@ -13,15 +13,30 @@ config_get strict pr strict
 config_get zones pr zones
 
 if [ "$ACTION" = "ifup" ] && [ "$enable" = "1" ]; then
-	network_get_subnet net $INTERFACE
-	network_get_subnet6 net6 $INTERFACE
 	network_get_physdev dev $INTERFACE
+	case $(uci get network.${INTERFACE}.proto) in none)
+		# ubus status/netifd does not output ip4addr if proto=none
+		net=$(ip -4 addr show dev ${dev} scope global|sed -n '2s,^[[:space:]]\+inet \([^[:space:]]\+\).*,\1,p')
+		#net6=$(ip -6 addr show dev ${dev} scope global|sed -n '2s,^[[:space:]]\+inet6 \([^[:space:]]\+\).*,\1,p')
+	;;*)
+		network_get_subnet net $INTERFACE
+		#network_get_subnet6 net6 $INTERFACE
+	;;esac
 
 	if [ "$net" != "" -a -n "$dev" ]; then
 		eval $(/bin/ipcalc.sh $net)
 		if [ "$PREFIX" != "0" -a "$NETWORK" != "127.0.0.0" ]; then
-			if [ ! "$(ip r s t localnets |grep "$NETWORK/$PREFIX dev")" ]; then
-				cmd="ip r a $NETWORK/$PREFIX dev $dev table localnets"
+			if [ ! "$(ip route show table localnets |grep "$NETWORK/$PREFIX dev")" ]; then
+				cmd="ip route add $NETWORK/$PREFIX dev $dev table localnets"
+				$cmd
+				if [ "$?" = 0 ]; then
+					logger -s -t policyrouting "Add route: $cmd"
+				else
+					logger -s -t policyrouting "Error! Could not add route: $cmd"
+				fi
+			fi
+			if [ ! "$(ip route show table olsr |grep "$NETWORK/$PREFIX dev")" ]; then
+				cmd="ip route add $NETWORK/$PREFIX dev $dev table olsr"
 				$cmd
 				if [ "$?" = 0 ]; then
 					logger -s -t policyrouting "Add route: $cmd"
@@ -33,7 +48,7 @@ if [ "$ACTION" = "ifup" ] && [ "$enable"
 		fi
 
 		if [ -n "$net6" ]; then
-			cmd="ip -6 r a $net6 dev $dev table localnets"
+			cmd="ip -6 route add $net6 dev $dev table localnets"
 			$cmd 2>&1 > /dev/null
 			if [ "$?" = 0 ]; then
 				logger -s -t policyrouting "Add route: $cmd (IPv6)"
@@ -52,53 +67,20 @@ if [ "$ACTION" = "ifup" ] && [ "$enable"
 		for n in $networks; do
 			if [ "$INTERFACE" = "$n" ]; then
 				for p in $proto; do
-					if [ ! "$(ip -$p ru s | grep "from all iif $dev lookup olsr-default")" ]; then
+					if [ ! "$(ip -$p rule show | grep "from all iif $dev lookup olsr-default")" ]; then
+						logger -s -t policyrouting "Use mesh gateway for interface $dev (IPv$p)"
 						ip -$p rule add dev "$dev" lookup olsr-default prio 20000
 						if [ "$strict" != 0 ]; then
 							ip -$p rule add dev "$dev" unreachable prio 20001
 						fi
-						if [ "$?" = 0 ]; then
-							logger -s -t policyrouting "Use mesh gateway for interface $dev (IPv$p)"
-							if [ -z "$(uci -P /var/state get freifunk-policyrouting.${INTERFACE})" ]; then
-								uci -P /var/state set freifunk-policyrouting.${INTERFACE}="state"
-							fi
-							uci -P /var/state set freifunk-policyrouting.${INTERFACE}.device="$dev"
-						else
-							logger -s -t policyrouting "Error: Could not add rule: dev "$dev" lookup olsr-default prio 20000 (IPv$p)"
+						if [ -z "$(uci -P /var/state get freifunk-policyrouting.${INTERFACE})" ]; then
+							uci -P /var/state set freifunk-policyrouting.${INTERFACE}="state"
 						fi
+						uci -P /var/state set freifunk-policyrouting.${INTERFACE}.device="$dev"
 					fi
 				done
 			fi
 		done
 	fi
-
 fi
 
-if [ "$ACTION" = "ifdown" ]; then
-	dev="$(uci -q -P /var/state get freifunk-policyrouting.${INTERFACE}.device)"
-	if [ -n "$dev" ]; then
-		networks=""
-		for z in $zones; do
-			network_zone="$(uci -q get firewall.zone_${z}.network)"
-			if [ -z "$network_zone" ]; then
-				network_zone="$z"
-			fi
-			networks="$networks $network_zone"
-		done
-		for n in $networks; do
-			if [ "$INTERFACE" = "$n" ]; then
-				for p in $proto; do
-					if [ "$(ip -$p ru s | grep "from all iif $dev lookup olsr-default")" ]; then
-						ip -$p rule del dev "$dev" lookup olsr-default prio 20000
-						ip -$p rule del dev "$dev" unreachable prio 20001
-						if [ "$?" = 0 ]; then
-							logger -s -t policyrouting "Remove rule: dev "$dev" lookup olsr-default prio 20000 (IPv$p)"
-						else
-							logger -s -t policyrouting "Error! Could not remove rule: dev "$dev" lookup olsr-default prio 20000 (IPv$p)"
-						fi
-					fi
-				done
-			fi
-		done
-	fi
-fi
Index: openwrt/feeds/luci/contrib/package/freifunk-policyrouting/files/etc/init.d/freifunk-policyrouting
===================================================================
--- openwrt.orig/feeds/luci/contrib/package/freifunk-policyrouting/files/etc/init.d/freifunk-policyrouting
+++ openwrt/feeds/luci/contrib/package/freifunk-policyrouting/files/etc/init.d/freifunk-policyrouting
@@ -5,7 +5,7 @@ START=15
 . /lib/functions.sh
 
 proto="4"
-[ -f /proc/net/ipv6_route ] && proto="4 6"
+#[ -f /proc/net/ipv6_route ] && proto="4 6"
 [ -f /etc/config/olsrd ] && cfgs="olsrd"
 [ -f /etc/config/olsrd6 ] && cfgs="$cfgs olsrd6"
 
@@ -92,6 +92,8 @@ add_lookup_rule() {
 	name=${1/-/_}
 	lookup=$2
 	prio=$3
+	in=$4
+	name=$name"_"${in:-allif}"_"
 
 	if [ -z "$name" -o -z "$lookup" -o -z "$prio" ]; then
 		logger -s -t policyrouting "Missing parameters for add_rule!"
@@ -102,21 +104,57 @@ add_lookup_rule() {
 			else
 				rule="rule"
 			fi
+			if [ "$(uci -q get network.${name}ipv${p})" != "$rule" ] ; then
+				uci batch <<- EOF
+					set network.${name}ipv${p}="$rule"
+					set network.${name}ipv${p}.lookup="$lookup"
+					set network.${name}ipv${p}.priority="$prio"
+					set network.${name}ipv${p}.in="$in"
+				EOF
+				uci commit network
+			fi
+		done
+	fi
+}
+
+add_action_rule() {
+	name=${1/-/_}
+	action=$2
+	prio=$3
+	in=$4
+	name=$name"_"${in:-allif}"_"
 
-			uci batch <<- EOF
-				set network.${name}ipv${p}="$rule"
-				set network.${name}ipv${p}.lookup="$lookup"
-				set network.${name}ipv${p}.priority="$prio"
-			EOF
+	if [ -z "$name" -o -z "$action" -o -z "$prio" ]; then
+		logger -s -t policyrouting "Missing parameters for add_action!"
+	else
+		for p in $proto; do
+			if [ "$p" = "6" ]; then
+				rule="rule6"
+			else
+				rule="rule"
+			fi
+			if [ "$(uci -q get network.${name}ipv${p})" != "$rule" ] ; then
+				uci batch <<- EOF
+					set network.${name}ipv${p}="$rule"
+					set network.${name}ipv${p}.action="$action"
+					set network.${name}ipv${p}.priority="$prio"
+					set network.${name}ipv${p}.in="$in"
+				EOF
+				uci commit network
+			fi
 		done
 	fi
 }
 
-del_lookup_rule() {
+
+del_rule() {
 	name=${1/-/_}
+	in=$2
+	name=$name"_"${in:-allif}"_"
 	for p in $proto; do
 		uci -q delete network.${name}ipv${p}
 	done
+	uci commit network
 }
 
 start() {
@@ -124,7 +162,7 @@ start() {
 		logger -s -t policyrouting "Starting policy routing."
 		rt_tables
 		olsrd_intalltables
-		disable_dyngw
+		#disable_dyngw
 
 		add_lookup_rule olsr olsr 1000
 		add_lookup_rule localnets localnets 2000
@@ -132,6 +170,20 @@ start() {
 		if [ "$fallback" = 1 ]; then
 			add_lookup_rule olsr-default olsr-default 100000
 		fi
+		networks=""
+		for z in $zones; do
+			network_zone="$(uci -q get firewall.zone_${z}.network)"
+			if [ -z "$network_zone" ]; then
+				network_zone="$z"
+			fi
+			networks="$networks $network_zone"
+		done
+		for n in $networks; do
+			add_lookup_rule olsr-default olsr-default 20000 $n
+			if [ "$strict" != 0 ]; then
+				add_action_rule olsr-default_unreachable unreachable 20001 $n
+			fi
+		done
 	fi
 	uci commit network
 	if [ ! "$1" = "noservicerestart" ]; then
@@ -142,20 +194,28 @@ start() {
 stop() {
 	logger -s -t policyrouting "Stopping policy routing"
 	olsrd_rmtables
-	del_lookup_rule olsr-default
-	del_lookup_rule olsr
-	del_lookup_rule localnets
-	uci commit network
+	del_rule olsr-default
+	del_rule olsr
+	del_rule localnets
+	networks=""
+	for z in $zones; do
+		network_zone="$(uci -q get firewall.zone_${z}.network)"
+		if [ -z "$network_zone" ]; then
+			network_zone="$z"
+		fi
+		networks="$networks $network_zone"
+	done
+	for n in $networks; do
+		del_rule olsr-default $n
+		if [ "$strict" != 0 ]; then
+			del_rule olsr-default_unreachable $n
+		fi
+	done
 	restart_services
 	echo "Hint: To completely disable freifunk-policyrouting set enable=0 in /etc/config/freifunk-policyrouting."
 }
 
 restart() {
 	logger -s -t policyrouting "Restarting policy routing"
-	olsrd_rmtables
-	del_lookup_rule olsr-default
-	del_lookup_rule olsr
-	del_lookup_rule localnets
-	uci commit network
 	start
 }
Index: openwrt/feeds/luci/contrib/package/freifunk-policyrouting/Makefile
===================================================================
--- openwrt.orig/feeds/luci/contrib/package/freifunk-policyrouting/Makefile
+++ openwrt/feeds/luci/contrib/package/freifunk-policyrouting/Makefile
@@ -4,7 +4,7 @@
 include $(TOPDIR)/rules.mk
 
 PKG_NAME:=freifunk-policyrouting
-PKG_RELEASE:=6
+PKG_RELEASE:=7
 
 PKG_BUILD_DIR := $(BUILD_DIR)/$(PKG_NAME)
 
